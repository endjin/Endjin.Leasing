//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Endjin.Leasing {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Strings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Strings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Endjin.Leasing.Strings", typeof(Strings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [{0}] Action completed using lease policy name : {1}.
        /// </summary>
        internal static string ActionCompletedUsingLeasePolicyName {
            get {
                return ResourceManager.GetString("ActionCompletedUsingLeasePolicyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A lease must first be acquired in order to extend the lease..
        /// </summary>
        internal static string ALeaseMustFirstBeAcquiredInOrderToExtendTheLease {
            get {
                return ResourceManager.GetString("ALeaseMustFirstBeAcquiredInOrderToExtendTheLease", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [{0}] Attempting to acquire a Lease with a lease policy name : {1} - duration: {2}.
        /// </summary>
        internal static string AttemptingToAcquireALeaseWithALeasePolicyName {
            get {
                return ResourceManager.GetString("AttemptingToAcquireALeaseWithALeasePolicyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [{0}] Attempting to extend the Lease using the existing lease policy name : {1} - duration: {2}.
        /// </summary>
        internal static string AttemptingToExtendTheLeaseUsingTheExistingLeasePolicyName {
            get {
                return ResourceManager.GetString("AttemptingToExtendTheLeaseUsingTheExistingLeasePolicyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [{0}] Lease could not be obtained with policy name : {1}..
        /// </summary>
        internal static string LeaseCouldNotBeObtainedWithPolicyName {
            get {
                return ResourceManager.GetString("LeaseCouldNotBeObtainedWithPolicyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Lease.Dispose called..
        /// </summary>
        internal static string LeaseDisposeCalled {
            get {
                return ResourceManager.GetString("LeaseDisposeCalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Lease successfully disposed..
        /// </summary>
        internal static string LeaseSuccessfullyDisposed {
            get {
                return ResourceManager.GetString("LeaseSuccessfullyDisposed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [{0}] Lease was successfully acquired for lease policy name : {1} - duration: {2}.
        /// </summary>
        internal static string LeaseWasSuccessfullyAcquiredForLeasePolicyName {
            get {
                return ResourceManager.GetString("LeaseWasSuccessfullyAcquiredForLeasePolicyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [{0}] Lease was successfully extended for lease policy name : {1} - duration: {2}.
        /// </summary>
        internal static string LeaseWasSuccessfullyExtendedForLeasePolicyName {
            get {
                return ResourceManager.GetString("LeaseWasSuccessfullyExtendedForLeasePolicyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The lease policy must not be null in order to extend the lease..
        /// </summary>
        internal static string TheLeasePolicyMustNotBeNullInOrderToExtendTheLease {
            get {
                return ResourceManager.GetString("TheLeasePolicyMustNotBeNullInOrderToExtendTheLease", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You must provide a valid LeasePolicy property..
        /// </summary>
        internal static string YouMustProvideAValidLeasePolicyProperty {
            get {
                return ResourceManager.GetString("YouMustProvideAValidLeasePolicyProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You must provide a valid RetryPolicy property..
        /// </summary>
        internal static string YouMustProvideAValidRetryPolicyProperty {
            get {
                return ResourceManager.GetString("YouMustProvideAValidRetryPolicyProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You must provide a valid RetryStrategy property..
        /// </summary>
        internal static string YouMustProvideAValidRetryStrategyProperty {
            get {
                return ResourceManager.GetString("YouMustProvideAValidRetryStrategyProperty", resourceCulture);
            }
        }
    }
}
